{"version":3,"sources":["Coin.jsx","App.js","reportWebVitals.js","index.js"],"names":["Coin","name","image","symbol","price","volume","priceChange","marketcap","className","src","alt","toLocaleString","toFixed","App","useState","coins","setCoins","search","setSearch","useEffect","axios","get","then","res","data","filteredCoins","filter","coin","toLowerCase","includes","action","type","placeholder","onChange","e","target","value","map","market_cap","current_price","price_change_percentage_24h","total_volume","id","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uRAGe,SAASA,EAAT,GAA+E,IAA/DC,EAA8D,EAA9DA,KAAMC,EAAwD,EAAxDA,MAAOC,EAAiD,EAAjDA,OAAQC,EAAyC,EAAzCA,MAAOC,EAAkC,EAAlCA,OAAQC,EAA0B,EAA1BA,YAAaC,EAAa,EAAbA,UAC5E,OACI,qBAAKC,UAAU,iBAAf,SACI,sBAAKA,UAAU,WAAf,UACI,sBAAKA,UAAU,OAAf,UACI,qBAAKC,IAAKP,EAAOQ,IAAI,WACrB,6BAAKT,IACL,mBAAGO,UAAU,cAAb,SAA4BL,OAEhC,sBAAKK,UAAU,YAAf,UACI,oBAAGA,UAAU,aAAb,cAA4BJ,KAC5B,oBAAGI,UAAU,cAAb,cAA6BH,EAAOM,oBAEhCL,EAAc,EACV,oBAAGE,UAAU,sBAAb,UACKF,EAAYM,QAAQ,GADzB,OAGC,oBAAGJ,UAAU,wBAAb,UACAF,EAAYM,QAAQ,GADpB,OAIT,oBAAGJ,UAAU,iBAAb,sBACcD,EAAUI,4BCiC7BE,MArDf,WACE,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KAEA,EAA4BF,mBAAS,IAArC,mBAAOG,EAAP,KAAeC,EAAf,KAEAC,qBAAU,WACRC,IACGC,IACC,4HAEDC,MAAK,SAAAC,GACJP,EAASO,EAAIC,WAEhB,IAEH,IAGMC,EAAgBV,EAAMW,QAAO,SAACC,GAAD,OACjCA,EAAK1B,KAAK2B,cAAcC,SAASZ,EAAOW,kBAG1C,OACE,sBAAKpB,UAAU,WAAf,UACE,sBAAKA,UAAU,cAAf,UACE,oBAAIA,UAAU,YAAd,6BACA,sBAAMsB,OAAO,GAAb,SACE,uBACEC,KAAK,OACLC,YAAY,SACZxB,UAAU,aACVyB,SAhBW,SAACC,GACpBhB,EAAUgB,EAAEC,OAAOC,eAmBhBX,EAAcY,KAAI,SAACV,GAClB,OACE,cAAC3B,EAAD,CAEEC,KAAM0B,EAAK1B,KACXC,MAAOyB,EAAKzB,MACZC,OAAQwB,EAAKxB,OACbI,UAAWoB,EAAKW,WAChBlC,MAAOuB,EAAKY,cACZjC,YAAaqB,EAAKa,4BAClBnC,OAAQsB,EAAKc,cAPRd,EAAKe,WC/BPC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBvB,MAAK,YAAkD,IAA/CwB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.85371d94.chunk.js","sourcesContent":["import React from 'react'\r\nimport './coin.css'\r\n\r\nexport default function Coin({ name, image, symbol, price, volume, priceChange, marketcap }) {\r\n    return (\r\n        <div className=\"coin-container\">\r\n            <div className=\"coin-row\">\r\n                <div className=\"coin\">\r\n                    <img src={image} alt=\"crypto\" />\r\n                    <h1>{name}</h1>\r\n                    <p className=\"coin-symbol\">{symbol}</p>\r\n                </div>\r\n                <div className=\"coin-data\">\r\n                    <p className=\"coin-price\">${price}</p>\r\n                    <p className=\"coin-volume\">${volume.toLocaleString()}</p>\r\n                    {\r\n                        priceChange < 0 ? (\r\n                            <p className=\"coin-percentage red\">\r\n                                {priceChange.toFixed(2)}%\r\n                            </p>\r\n                        ) : (<p className=\"coin-percentage green\">\r\n                            {priceChange.toFixed(2)}%\r\n                        </p>)\r\n                    }\r\n                    <p className=\"coin-marketcap\">\r\n                        Mkt Cap:${marketcap.toLocaleString()}\r\n                    </p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport \"./App.css\";\nimport Coin from \"./Coin\";\n\nfunction App() {\n  const [coins, setCoins] = useState([]);\n\n  const [search, setSearch] = useState('');\n\n  useEffect(() => {\n    axios\n      .get(\n        \"https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&order=market_cap_desc&per_page=100&page=1&sparkline=false\"\n      )\n      .then(res => {\n        setCoins(res.data);\n      })\n  }, []);\n\n  const handleChange = (e) => {\n    setSearch(e.target.value);\n  };\n  const filteredCoins = coins.filter((coin) =>\n    coin.name.toLowerCase().includes(search.toLowerCase())\n  );\n\n  return (\n    <div className=\"coin-app\">\n      <div className=\"coin-search\">\n        <h1 className=\"coin-text\">Search Currency</h1>\n        <form action=\"\">\n          <input\n            type=\"text\"\n            placeholder=\"search\"\n            className=\"coin-input\"\n            onChange={handleChange}\n          />\n        </form>\n      </div>\n      {filteredCoins.map((coin) => {\n        return (\n          <Coin\n            key={coin.id}\n            name={coin.name}\n            image={coin.image}\n            symbol={coin.symbol}\n            marketcap={coin.market_cap}\n            price={coin.current_price}\n            priceChange={coin.price_change_percentage_24h}\n            volume={coin.total_volume}\n          />\n        );\n      })}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}